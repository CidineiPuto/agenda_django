Para ignorar os erros de tipagem no settings, vamos usar;

# type: ignore

E para desabilitar o flake8 só em casos bem específicos, podemos usar;

# flake8: noqa


Agora, vamos criar uma pasta chamada utils e dentro um arquivo;

"create_contacts.py"

Em que iremos usar o fake.

Por termos que importar para trás do utils iremos usar isso;

    DJANGO_BASE_DIR = Path(__file__).parent.parent

Que é a base do folder principal.

Isso é como se fosse para enganar o python, dizendo que isso também faz parte do projeto
para fazer isso, iremos usar sys.

    sys.path.append(str(DJANGO_BASE_DIR))

No django, sempre que vamos o utilizar que não for por manage.py, temos que configurar
o DJANGO_SETTINGS_MODULE falando aonde está ele.

    os.environ["DJANGO_SETTINGS_MODULE"] = "project.settings"

Já que não vamos passar pelo manage.py, e ainda iremos usar o;

    django.setup()

para configurar o django.
E vamos colocar o "USE_TZ = False"

    Contact.objects.all().delete()
    Category.objects.all().delete()

Lembre que isso irá deletar tudo, tendo apenas os dados do faker.

    categories = ["Amigos", "Família", "Conhecidos"] O nome das categorias

    django_categories = [Category(name=name) for name in categories]
    adiciona as categorias no django categories

    for category in django_categories:
        category.save()
    Salva as categorias.

Os contatos estão sendo criados de uma vez no bulk_create, através da lista de contatos.
Do fake, pegamos o profile;

    profile = fake.profile()
    email = profile['mail'] Isso é caputado do profile também.

O first_name foi quebrado pelo uso de split, colocando 1 espaço no meio, e dando
a outra metade para o last_name.

    first_name, last_name = profile["name"].split(" ", 1)

Depois o phone foi criado com;

    phone = fake.phone_number()

E tem o de dadas;

        created_date: datetime = fake.date_this_year()

São datas criadas a partir desse ano apenas.
É usado o fake text para criar um texto de até 100 palavras;

    description = fake.text(max_nb_chars=100)

E por último é usado o choice para escolher algo do django_categories.

        category = choice(django_categories)

Por fim, os contatos são salvos na memória no django_contacts.

Depois, é usado o;

    if len(django_contacts) > 0:
        Contact.objects.bulk_create(django_contacts)


Se tiver mais que 0 contatos, o bulk_create irá criar todos os contatos de uma só vez
para não precisar usar o save de pouco em pouco, o que iria fazer ter mais de 1000
querys.

Esse script já faz o que o manage faz, por isso, só precisa executar ele.
Só não foi preenchido as imagens, e os owners.