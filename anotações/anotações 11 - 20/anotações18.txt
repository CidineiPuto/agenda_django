Iremos fazer o contact único agora, primeiramente iremos criar um template sozinho.
Após extendermos o global, para o contact.html;

{% block content %}
  <div class="single-contact">
    <h1 class="single-contact-name">
        {{contact.first_name}} {{contact.last_name}}
    </h1>
  </div>
{% endblock content %}

Podemos perceber que iremos usar contact, e não contacts, pois iremos usar ele único.

    single_contact = Contact.objects.get(pk=contact_id)

Na view, usamos o contato para pegar com get que pega apenas uma coisa, o pk=contact_id
o pk seria o id, que está vindo no contact_id.

Quando passarmos a view para a url;

    path("<int:contact_id>", views.contact, name="contact"),

Iremos falar que o contact_id recebido, será um int.

Após tudo for exibido no contact.html, no contact block,
o category será um foreign_key, e estamos dependendo do __str__ dele,
e para resolver isso e não necessitar só do __str__
dentro do block, iremos definir o campo que queremos;

    <p><b>Category:</b> {{ contact.category.name }} </p>

Agora iremos configurar o link do contato, lá no index.html, dentro do for,
na class table-link.

                    <a href="{% url "contact:contact" contact.id %}" 
                    class="table-link">
                        {{ contact.id }}
                    </a>

Irá dar um erro, se colocarmos uma pk errada quando formos procurar o link,
isso será por conta do get se ele encontrar mais de um valor, ou um valor inexistente
ira dar erro no terminal.
Então para corrigir, podemos usar ao invés de get uma filter, e dentro da query_set
podemos usar o first() justamente para corrigir o problema.

Mas com isso, outro problema irá acontecer, pois se colocarmos um id que não existe,
irá mostrar um contact completamente vazio.

Podemos levantar uma excessão com o django, dentro do contact_views.

    if single_contact is None:
        raise Http404

Mas ao invés de levantarmos desse jeito, dentro do;

    from django.shortcuts import render

Iremos importar o get_object_or_404.
Pelo erro 404 ser comum, podemos facilmente usar isso sem problemas.

    single_contact = get_object_or_404(Contact, pk=contact_id)

Dessa forma irá ficar até mais curto o código, se quisermos também podemos passar
o manager.

        single_contact = get_object_or_404(Contact.objects, pk=contact_id)

Até o filter podemos usar;

        single_contact = get_object_or_404(Contact.objects.filter(pk=contact_id))

Pois alguns momentos talvez temos que manipular a consulta de uma maneira que não
conseguimos fazer, e claro, vamos colocar o show também.
Se o show for false no admin, ou pelo código, não será mostrado, mas se digitar o id
dela ela aparece. Apenas não aparece se for procurado normalmente,
mas, podemos usar o filtro também pelo show=True, assim, se não for mostrado, irá ser
levantado um 404.
Por isso colocamos o show no single_contact.