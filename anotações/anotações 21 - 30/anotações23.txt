https://docs.djangoproject.com/en/4.2/topics/pagination/

O paginator é algo que já está pronto, e por isso, não precisamos fazer um código
complicado.

Iremos primeiramente, importar o paginator;

    from django.core.paginator import Paginator

No paginator, vamos colocar ele na view index;

def index(request):
    contacts = Contact.objects.filter(show=True).order_by("-id")

    paginator = Paginator(contacts, 10)

Colocamos o nosso contacts dentro de paginator, e colocamos que ele é separado de 10
em 10 páginas.
Agora, já aqui;

    page_number = request.GET.get("page")

Eles estão pegando page, de dentro do get.
E por último, tem o page objects, que vamos substituir pelo contacts.

    page_obj = paginator.get_page(page_number)
    context = {
        "page_obj": page_obj,
        "site_title": "Contatos - ",
    }

Agora, vamos arrumar dentro do index.html, algumas coisas.
    
    ...
    {% if page_obj %}
    <div class="responsive-table">
    ...
        <tbody>
            {% for contact in page_obj %}
              <tr class="table-row">

Por enquanto ainda não temos a paginação, lá no link, vamos pegar o seguinte trecho;

<div class="pagination">
    <span class="step-links">
        {% if page_obj.has_previous %}
            <a href="?page=1">&laquo; first</a>
            <a href="?page={{ page_obj.previous_page_number }}">previous</a>
        {% endif %}

        <span class="current">
            Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}.
        </span>

        {% if page_obj.has_next %}
            <a href="?page={{ page_obj.next_page_number }}">next</a>
            <a href="?page={{ page_obj.paginator.num_pages }}">last &raquo;</a>
        {% endif %}
    </span>
</div>

Vamos criar um partials dele, com o nome de "_pagination.html".
Vamos fazer outra coisa, não iremos exibir a paginação se não tiver nada no page_obj.

{% if page_obj %}
    ...
{% endif %}

Vamos incluir ele no base.
E outra coisa, nosso pagination já está pronto.

Mas lá no search iremos precisar de outra coisa,
dentro da view.
Lá iremos colocar o paginator depois da busca, e também, vamos trocar o "contacts" por
"page_obj".

Irá dar certo, porém, se clicarmos no next, iremos perder nossa pesquisa.
Então, lá no _pagination.html, faremos o seguinte;

        {% if page_obj.has_previous %}
            <a href="?page=1&q={{ request.GET.q.strip }}">&laquo; first</a>
            <a href="?page={{ page_obj.previous_page_number }}&q={{ request.GET.q.strip }}">previous</a>
        {% endif %}
        ...
        {% if page_obj.has_next %}
            <a href="?page={{ page_obj.next_page_number }}&q={{ request.GET.q.strip }}">next</a>
            <a href="?page={{ page_obj.paginator.num_pages }}&q={{ request.GET.q.strip }}">last &raquo;</a>
        {% endif %}

Agora sim irá dar certo, lembre que esse "&q={{ request.GET.q.strip }}" faz com que
o form não saia.